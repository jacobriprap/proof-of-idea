@using GroupM.CSE.ProofOfIdea.Models
@using Microsoft.AspNet.Identity.Owin
@using Microsoft.AspNet.Identity
@model CSEMessageViewModel
@{
    ViewBag.Title = ResourceLang.NewEmail;
    ApplicationUser currentUser = HttpContext.Current.GetOwinContext().GetUserManager<ApplicationUserManager>().FindByName(User.Identity.Name);
    ApplicationUserManager appUsrMgr = HttpContext.Current.GetOwinContext().GetUserManager<ApplicationUserManager>();
}

@section scripts
{
    <script src="~/scripts/tinymce/tinymce.min.js"></script>
    <!-- Script to wire up your TinyMCE editor -->
    <script type="text/javascript">
        // Initialize your tinyMCE Editor with your preferred options
        tinyMCE.init({
            // General options
            mode: "textareas",
            theme: "modern",
            // Theme options
            theme_advanced_buttons1: "save,newdocument,|,bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,|,styleselect,formatselect,fontselect,fontsizeselect",
            theme_advanced_buttons2: "cut,copy,paste,pastetext,pasteword,|,search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,image,cleanup,help,code,|,insertdate,inserttime,preview,|,forecolor,backcolor",
            theme_advanced_buttons3: "tablecontrols,|,hr,removeformat,visualaid,|,sub,sup,|,charmap,emotions,iespell,media,advhr,|,print,|,ltr,rtl,|,fullscreen",
            theme_advanced_buttons4: "insertlayer,moveforward,movebackward,absolute,|,styleprops,spellchecker,|,cite,abbr,acronym,del,ins,attribs,|,visualchars,nonbreaking,template,blockquote,pagebreak,|,insertfile,insertimage",
            theme_advanced_toolbar_location: "top",
            theme_advanced_toolbar_align: "left",
            theme_advanced_statusbar_location: "bottom",
            theme_advanced_resizing: true,

            // Example content CSS (should be your site CSS)
            content_css: "css/example.css",
        });
    </script>
}

<h1>@ResourceLang.NewEmail</h1>

@using (Html.BeginForm("Send", "Mail", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="row" style="padding-top:50px">
        <div class="col-xs-4">
            @if (appUsrMgr.IsInRole(currentUser.Id, "CSE_Mentors"))
            {
                <h2>@ResourceLang.MailRecipientMembersHeader:</h2>

                <div class="list-group">
                    @using (var db = new ApplicationDbContext())
                    {
                        foreach (var dbCompany in db.Companies.Where(c => c.MentorId == currentUser.Id))
                        {
                            <div class="list-group-item">
                                <input type="checkbox" name="RecipientList" id="RecipientList" value="@dbCompany.Administrator.Id" /> <label for="RecipientList">@dbCompany.Administrator.Fullname</label>
                                <span>, @dbCompany.Name</span>
                                @if (!String.IsNullOrWhiteSpace(dbCompany.Administrator.ImageUrl))
                                {
                                    <img class="pull-right" src="@dbCompany.Administrator.ImageUrl" width="32" height="32" />
                                }
                            </div>
                        }
                    }
                </div>
            }
            else if (currentUser.Profile != null && currentUser.Profile.SelectedCompany != null && currentUser.Profile.SelectedCompany.Mentor != null)
            {   // For company members with mentors associated
                <h2>@ResourceLang.MailRecipientMentorsHeader:</h2>
                var mentor = currentUser.Profile.SelectedCompany.Mentor;
                <div class="list-group">
                    <div class="list-group-item">
                        <input type="checkbox" name="RecipientList" id="RecipientList" value="@mentor.Id" /> <label for="RecipientList">@mentor.Fullname</label>
                        @if (!String.IsNullOrWhiteSpace(mentor.ImageUrl))
                        {
                            <img class="pull-right" src="@mentor.ImageUrl" width="32" height="32" />
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="list-group">
                    <i>@ResourceLang.MailNoRecipients</i>
                </div>
            }
        </div>
        <div class="col-xs-8" style="border-left:solid 1px #4869a6">
            <div class="row cseBottomLine">
                @Html.TextBoxFor(m => m.Subject, new { @class = "", @placeholder = @ResourceLang.NewEmailSubject, @style = "border-style:none;font-size:2em;width:100%" })
                @Html.ValidationMessageFor(m => m.Subject, "", new { @class = "text-danger" })
            </div>
            <div class="">
                @Html.TextAreaFor(m => m.Body, new { @class = "", @placeholder = @ResourceLang.NewEmailBody, @style = "border-style:none;font-size:1.5em;width:100%", @rows = "6", @cols = "2" })
                @Html.ValidationMessageFor(m => m.Body, "", new { @class = "text-danger" })
            </div>
            <div class="row ">
                <div class="pull-right">
                    <button type="button" value="Discard" class="cseButtonFrameMd" onclick="window.location = '/mail'; return (false);">Discard</button>
                    <button type="submit" value="Send" class="cseButtonSolidMd">Send</button>
                </div>
            </div>
        </div>
    </div>
}
