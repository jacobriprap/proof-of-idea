@using Microsoft.AspNet.Identity.Owin
@using Microsoft.AspNet.Identity
@using GroupM.CSE.ProofOfIdea.Models

<script type="text/javascript">
    function updateTask(companyId, taskId) {
        $.ajax({
            url: "/tasks/ToggleTaskStatus/" + taskId + "/?companyId=" + companyId,
            context: document.body
        }).done(function (jqXHR, textStatus, errorThrown) {
            window.location.reload(false);
        });
    }
</script>

<div class="row">
    @{
        bool isTaskAreaDisabled = ViewBag.IsDisabled != null && ViewBag.IsDisabled;
        int taskCount = 0;
        int taskCompletedCount = 0;
        using (var db = new ApplicationDbContext())
        {
            int companyId = ViewBag.CompanyId;
            var dbCompany = db.Companies.Include("BusinessProposals").FirstOrDefault(c => c.Id == companyId);
            TaskItem.TaskArea taskAreaType = ViewBag.TaskArea;
            if (dbCompany != null)
            {
                taskCount = dbCompany.Tasks.Count(t => t.Task.Area == taskAreaType);
                taskCompletedCount = dbCompany.Tasks.Count(t => t.ApprovedBy != null && t.Task.Area == taskAreaType);
                int taskCompletedStatus = ((int)(((float)taskCompletedCount / taskCount) * 100.0f));
                taskCompletedStatus = Math.Min(Math.Max(taskCompletedStatus, 0), 100);
                <div class="col-sm-12 col-md-12 col-lg-12 container-fluid">
                    <div class="cseButtonSolidMd row col-sm-12 col-md-12 col-lg-12" style="width:100%;text-align:left">
                        <div class="col-sm-3">
                            @ViewBag.TaskTitle
                        </div>
                        <div class="col-sm-1">
                            @if (taskCount > 0 && !isTaskAreaDisabled)
                            {
                                <span style="color:white"> @(taskCompletedStatus)%</span>
                            }
                        </div>
                        <div class="col-sm-7">
                            @if (taskCount > 0 && !isTaskAreaDisabled)
                            {

                                <div style="background-color:#e1e1df;display:inline-block;width:90%;height:20px">
                                    <div style="width:@taskCompletedStatus%;background-color:#9e9e9e;height:inherit">
                                        <span class="sr-only">@(taskCompletedStatus)%</span>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <span>@ResourceLang.TaskAreaClosed</span>
                            }
                        </div>
                        <div class="col-sm-1">
                            <a href="#taskArea@(taskAreaType)" data-toggle="collapse"><img height="12" src="~/Content/icons/triangle_right.svg" /></a>
                        </div>
                    </div>
                    <div id="taskArea@(taskAreaType)" class="cseLightGreyFrame row @(isTaskAreaDisabled?"collapse":"")" style="width:100%;padding:20px">
                        <div class="row">
                            <ul>
                                @foreach (TaskAssignment dbTask in dbCompany.Tasks.Where(t => t.Task.Area == taskAreaType))
                                {
                                    string taskDescription = ResourceLang.ResourceManager.GetString(dbTask.Task.Description.Trim("{}".ToCharArray()));
                                    string actionDescription = ResourceLang.ResourceManager.GetString(dbTask.Task.ActionDescription.Trim("{}".ToCharArray()));
                                    string action = dbTask.Task.Action;
                                    if (action.StartsWith("{") && dbTask.Task.Action.EndsWith("}"))
                                    {
                                        action = ResourceLang.ResourceManager.GetString(dbTask.Task.Action.Trim("{}".ToCharArray()));
                                    }
                                    if (action.StartsWith("[url:") && action.EndsWith("]"))
                                    {
                                        action = action.Substring("[url:".Length, action.Length - ("[url:".Length + 1));
                                        action = action.Replace("%%COMPANY_ID%%", ViewBag.CompanyId.ToString());
                                    }
                                    if (dbTask.Task.Id == 2)
                                    {
                                        if (dbCompany.BusinessProposals.Count() > 0)
                                        {
                                            var proposal = dbCompany.BusinessProposals.OrderByDescending(bp => bp.Version).First();

                                            if ((proposal.Status != BusinessProposal.ProposalStatus.Draft && !User.IsInRole("CSE_Mentors")) || User.IsInRole("CSE_Mentors"))
                                            {
                                                action += string.Format("/company/{0}/v/{1}", dbCompany.Id, proposal.Version);
                                            }
                                            else
                                            {
                                                if (proposal.Version == 1)
                                                {
                                                    action += string.Format("/company/{0}/v/1", dbCompany.Id);
                                                }
                                                else
                                                {
                                                    action += string.Format("/company/{0}/v/{1}", dbCompany.Id, proposal.Version - 1);
                                                }
                                            }
                                        }
                                        else
                                        {
                                            action += string.Format("/company/{0}/v/1", dbCompany.Id);
                                        }
                                    }
                                    <li class="checkbox">
                                        <div class="col-sm-6 col-md-6 col-lg-6"><label><input type="checkbox" value="" @(isTaskAreaDisabled ? "disabled" : "") @(dbTask.ApprovedBy != null ? "checked" : "") onchange="updateTask(@dbCompany.Id,@dbTask.Id)" />@taskDescription</label></div>
                                        <div class="col-sm-3 col-md-3 col-lg-3"><a href="@action">@actionDescription</a></div>
                                    </li>
                                }
                            </ul>
                        </div>
                        @if (taskCount == 0)
                        {
                            <i>@ResourceLang.TaskListEmpty</i>
                        }
                        else
                        {
                            @Html.Hidden("CompanyId",dbCompany.Id)
                            <div class="form-group center-block" style="padding-top:20px">
                                <input type="hidden" name="TaskArea" value="@taskAreaType.ToString()" />
                                <button type="submit" name="TaskVerify" value="REQUESTCONFIRM" class="cseButtonSolidMd" @(taskCompletedCount < taskCount || isTaskAreaDisabled ? "disabled style=font-style:italic;background-color:#E1E1DF;border-color:#9e9e9e;color:#9e9e9e" : "")>@ResourceLang.POISendForConfirmation</button>
                                @if (User.IsInRole("CSE_SuperAdmins") || dbCompany.MentorId == User.Identity.GetUserId())
                                {
                                    <button type="submit" name="TaskVerify"  value="MENTORCONFIRM" class="cseButtonSolidMd" @(taskCompletedCount < taskCount || isTaskAreaDisabled ? "disabled style=font-style:italic;background-color:#E1E1DF;border-color:#9e9e9e;color:#9e9e9e" : "")>@ResourceLang.POIMentorConfirm</button>
                                }
                            </div>
                        }
                    </div>
                </div>
            }
        }
    }
</div>
