@using GroupM.CSE.ProofOfIdea.Models
@using Microsoft.AspNet.Identity.Owin
@using Microsoft.AspNet.Identity
@if (Request.IsAuthenticated)
{
    Company selectedCompany = null;
    var version = 1;
    string userFriendlyName = "N/A";
    string userFriendlyFirstName = "N/A";
    string userFriendlyLastName = "";
    string userFriendlyCompanyName = "N/A";
    string profileImageUrl = "/Content/Images/profilelogo_cse.png";
    int newMailCount = 0;
    bool hasMentorRole = false;
    bool hasSuperAdminRole = false;
    List<TaskAssignment> taskList = new List<TaskAssignment>();
    UserProfile userProfile;
    BusinessProposal proposal = null;

    ApplicationUserManager appUsrMgr = HttpContext.Current.GetOwinContext().GetUserManager<ApplicationUserManager>();
    ApplicationUser user = appUsrMgr.FindByName(User.Identity.Name);
    if (user != null)
    {
        hasMentorRole = appUsrMgr.IsInRole(user.Id, "CSE_Mentors");
        hasSuperAdminRole = appUsrMgr.IsInRole(user.Id, "CSE_SuperAdmins");

        profileImageUrl = !String.IsNullOrWhiteSpace(user.ImageUrl) ? user.ImageUrl : "/Content/Images/profilelogo_cse.png";
        // Count unread messages
        newMailCount = user.CSEMessages.Where(mm => mm.DateRead == null).Count();

        // Produce displayfriendly names
        userFriendlyName = user.UserName;
        if (userFriendlyName.IndexOf('@') > 0)
        {
            userFriendlyName = userFriendlyName.Substring(0, userFriendlyName.IndexOfAny(".@".ToCharArray()));
        }
        userFriendlyFirstName = userFriendlyName;
        if (user.Profile != null)
        {
            userFriendlyName = user.FirstName ?? userFriendlyName;
            userFriendlyFirstName = user.FirstName ?? userFriendlyName;
            userFriendlyLastName = user.LastName ?? "";

            // Check if there's a selected company
            using (var db = new ApplicationDbContext())
            {
                userProfile = db.Profiles.FirstOrDefault(p => p.UserId == user.Id);

                // Set a selected company, if the user is associated with any
                if (userProfile != null && userProfile.SelectedCompany == null && userProfile.User.Companies.Count > 0)
                {
                    userProfile.SelectedCompanyId = userProfile.User.Companies.First().Id;
                    db.SaveChanges();
                }
                selectedCompany = userProfile.SelectedCompany;


                if (selectedCompany != null)
                {
                    userFriendlyCompanyName = selectedCompany.Name;
                    // Find all pending tasks
                    taskList.AddRange(selectedCompany.Tasks.Where(t => t.ApprovedBy == null));
                    proposal = selectedCompany.BusinessProposals.OrderByDescending(bp => bp.Version).FirstOrDefault();
                    if (proposal != null)
                    {
                        if ((proposal.Status != BusinessProposal.ProposalStatus.Draft && !User.IsInRole("CSE_Mentors")) || User.IsInRole("CSE_Mentors"))
                        {
                            version = proposal.Version;
                        }
                        else
                        {
                            if (proposal.Version > 1)
                            {
                                version = proposal.Version - 1;
                            }
                        }
                    }
                }
            }
        }
        else if (user.Mentor != null)
        {
            userFriendlyName = user.FirstName + " " + user.LastName;
            userFriendlyFirstName = user.FirstName;
            userFriendlyLastName = user.LastName;
        }
    }
    else
    {
        // Logged user session has been corrupted. Log out
        HttpContext.Current.GetOwinContext().Authentication.SignOut(DefaultAuthenticationTypes.ApplicationCookie);
    }

    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
        @Html.AntiForgeryToken()
        <ul class="nav navbar-nav text-center">
            <li class="cseNavSpacing">
                <div class="dropdown">
                    <a href="#" class="dropdown-toggle" style="text-decoration:none" type="button" id="ddProfileLinks" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                        <span class="cseBlue" style="font-size:xx-large">@userFriendlyName <img width="10" style="fill:#ff0000" src="~/Content/icons/triangle_down.svg" /></span><br />
                        <span class="cseBlue" style="font-weight:bold;font-size:large">@userFriendlyCompanyName</span>
                    </a>
                    <ul class="dropdown-menu cseBlueFrame" aria-labelledby="ddProfileLinks">
                        <li class="cseBottomLine">
                            <a href="@(hasMentorRole?Url.Action("Index","Mentor"):Url.Action("Index","Profile"))">
                                <div class="row" style="padding-left:12px">
                                    <div class="" style="display:table-cell">@userFriendlyFirstName<br />@userFriendlyLastName</div>
                                    <div style="display:table-cell;padding-left:10px">
                                        <img class="img-thumbnail" src="@profileImageUrl" style="width:64px" />
                                    </div>
                                </div>
                            </a>
                        </li>
                        @foreach (var company in user.Companies)
                        {
                            <li class="@(selectedCompany!=null&&selectedCompany.Id==company.Id?"active":"")"><a href="/company/@company.Id/tasks?UpdComSel=true">@company.Name</a></li>
                        }

                        @* Only suggest creating a new company for normal users *@
                        @if (!hasSuperAdminRole && !hasMentorRole)
                        {
                            <li class="cseTopLine">
                                <a class="" href="/company/create"><span style="">@(user.Companies.Count <= 0 ? ResourceLang.ProfileCompanyListEmptyCreateNew : ResourceLang.CreateCompany)</span></a>
                            </li>
                        }
                        <li>
                            <a class="pull-right" href="javascript:document.getElementById('logoutForm').submit()">@ResourceLang.LogOut</a>
                        </li>

                    </ul>
                </div>
            </li>
            @if (hasSuperAdminRole)
            {
                <li class="cseNavSpacing">
                    <span class="cseBlue" style="font-size:2em;font-weight:bold"><a href="@Url.Action("Index","Administration")">@ResourceLang.Administration</a></span>
                </li>
            }
            else if (hasMentorRole)
            {
                <li class="cseNavSpacing">
                    <span class="cseBlue" style="font-size:2em;font-weight:bold"><a href="@Url.Action("Companies","Mentor")">@ResourceLang.Companies</a></span>
                </li>
            }
            else
            {   // Normal users
                <li class="cseNavSpacing">
                    <span class="cseBlue" style="font-size:2em;font-weight:bold;">
                        <a href="@(selectedCompany!=null?("/company/"+selectedCompany.Id.ToString()+"/tasks"):"/company/create")">@ResourceLang.Tasks</a>
                        @if (taskList != null || taskList.Count > 0)
                        {
                            <span class="cseRedCircle" style="font-size:0.5em;font-weight:bold;top:0px;position:absolute;right:-25px;">@taskList.Count</span>
                        }
                    </span>
                </li>
                <li class="cseNavSpacing">
                    @if (selectedCompany != null)
                    {
                        <span class="cseBlue" style="font-size:2em;font-weight:bold"><a href="/poi/company/@(selectedCompany.Id)/v/@(version)">@ResourceLang.POI</a></span>
                    }
                </li>
            }
            <li class="cseNavSpacing">
                <a href="/mail" title="@ResourceLang.Mail" style="position:relative">
                    <img src="~/Content/icons/mail.svg" width="40" height="35" style="" />
                    @if (newMailCount > 0)
                    {
                        <span class="cseRedCircle" style="font-size:1.2em;font-weight:bold;top:0px;position:absolute">@newMailCount</span>
                    }
                </a>
            </li>
            <li class="cseNavSpacing">
                <input type="text" class="form-control" placeholder="Search">
            </li>
        </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li style="margin:5px"><input type="button" class="cseButtonFrame" data-toggle="modal" data-target="#diagSignup" data-backdrop="true" value="Sign up"></li>
        <li style="margin:5px"><input type="button" class="cseButtonSolid" value="Login" onclick="window.location='/account/login'"></li>
        <li>
            <form class="navbar-form navbar-right" role="search">
                <div class="form-group">
                    <input type="text" class="form-control" placeholder="Search">
                </div>
            </form>
        </li>
    </ul>
}
